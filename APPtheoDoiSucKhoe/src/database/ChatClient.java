package database;

import java.io.*;
import java.net.*;
import javafx.application.Platform;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.control.ListView;
import javafx.scene.control.TextArea;

public class ChatClient {
    private Socket socket;
    private BufferedReader in;
    private PrintWriter out;
    private TextArea chatArea;
    private ListView<String> userListView;
    private ObservableList<String> onlineUsers;
    private String username;
    private boolean connected = false;

    public ChatClient(String username, TextArea chatArea, ListView<String> userListView) {
        this.username = username;
        this.chatArea = chatArea;
        this.userListView = userListView;
        this.onlineUsers = FXCollections.observableArrayList();
        userListView.setItems(onlineUsers);
    }

    public boolean connect() {
        try {
            System.out.println("ƒêang k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß chat...");
            socket = new Socket("localhost", 9876);
            socket.setSoTimeout(30000); // Timeout 30 gi√¢y

            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            out = new PrintWriter(socket.getOutputStream(), true);

            System.out.println("ƒê√£ k·∫øt n·ªëi, g·ª≠i t√™n ng∆∞·ªùi d√πng: " + username);
            // G·ª≠i t√™n ng∆∞·ªùi d√πng ƒë·∫øn m√°y ch·ªß
            out.println(username);

            // B·∫Øt ƒë·∫ßu m·ªôt lu·ªìng ƒë·ªÉ x·ª≠ l√Ω tin nh·∫Øn ƒë·∫øn
            Thread listenerThread = new Thread(this::listenForMessages);
            listenerThread.setDaemon(true);
            listenerThread.start();

            connected = true;
            System.out.println("K·∫øt n·ªëi th√†nh c√¥ng!");
            return true;
        } catch (IOException e) {
            System.out.println("L·ªói k·∫øt n·ªëi: " + e.getMessage());
            e.printStackTrace();
            connected = false;
            return false;
        }
    }

    private void listenForMessages() {
        try {
            String message;
            while (connected && (message = in.readLine()) != null) {
                final String finalMessage = message;
                System.out.println("Nh·∫≠n tin nh·∫Øn: " + finalMessage);

                // Ki·ªÉm tra xem ƒë√¢y c√≥ ph·∫£i l√† c·∫≠p nh·∫≠t danh s√°ch ng∆∞·ªùi d√πng kh√¥ng
                if (message.startsWith("USERS:")) {
                    String[] userArray = message.substring(6).split(",");
                    Platform.runLater(() -> {
                        onlineUsers.clear();
                        for (String user : userArray) {
                            if (user != null && !user.trim().isEmpty()) {
                                onlineUsers.add(user);
                            }
                        }
                        System.out.println("Danh s√°ch ng∆∞·ªùi d√πng tr·ª±c tuy·∫øn: " + onlineUsers);
                    });
                } else {
                    // Tin nh·∫Øn chat th√¥ng th∆∞·ªùng
                    Platform.runLater(() -> {
                        chatArea.appendText(finalMessage + "\n");
                    });
                }
            }
        } catch (IOException e) {
            System.out.println("L·ªói ƒë·ªçc tin nh·∫Øn: " + e.getMessage());
            if (connected) {
                // Ch·ªâ hi·ªÉn th·ªã l·ªói n·∫øu tr∆∞·ªõc ƒë√≥ ƒëang k·∫øt n·ªëi
                Platform.runLater(() -> {
                    chatArea.appendText("ƒê√£ m·∫•t k·∫øt n·ªëi kh·ªèi m√°y ch·ªß\n");
                });
                connected = false;
            }
        } finally {
            if (connected) {  // Ch·ªâ disconnect n·∫øu v·∫´n ƒëang k·∫øt n·ªëi
                System.out.println("Lu·ªìng l·∫Øng nghe tin nh·∫Øn k·∫øt th√∫c, ƒë√≥ng k·∫øt n·ªëi...");
                disconnect();
            }
        }
    }
    public void sendMessage(String message) {
        if (!connected) {
            System.out.println("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn: kh√¥ng c√≥ k·∫øt n·ªëi");
            Platform.runLater(() -> {
                chatArea.appendText("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn: ƒë√£ m·∫•t k·∫øt n·ªëi v·ªõi m√°y ch·ªß chat\n");
            });
            return;
        }

        if (socket == null || socket.isClosed()) {
            System.out.println("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn: socket ƒë√£ ƒë√≥ng");
            connected = false;
            Platform.runLater(() -> {
                chatArea.appendText("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn: ƒë√£ m·∫•t k·∫øt n·ªëi v·ªõi m√°y ch·ªß chat\n");
            });
            return;
        }

        System.out.println("G·ª≠i tin nh·∫Øn: " + message);

        // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa m√¨nh trong khung chat tr∆∞·ªõc khi g·ª≠i ƒëi
        Platform.runLater(() -> {
            chatArea.appendText(username + ": " + message + "\n");
        });

        // G·ª≠i tin nh·∫Øn ƒë·∫øn m√°y ch·ªß
        out.println(message);

        // Ki·ªÉm tra l·ªói
        if (out.checkError()) {
            System.out.println("L·ªói khi g·ª≠i tin nh·∫Øn");
            connected = false;
            Platform.runLater(() -> {
                chatArea.appendText("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn: ƒë√£ m·∫•t k·∫øt n·ªëi v·ªõi m√°y ch·ªß chat\n");
            });
        } else {
            System.out.println("ƒê√£ g·ª≠i tin nh·∫Øn th√†nh c√¥ng");
        }
    }

    public void disconnect() {
        if (!connected) {
            return; // Tr√°nh ƒë√≥ng k·∫øt n·ªëi nhi·ªÅu l·∫ßn
        }

        System.out.println("üîå ƒê√≥ng k·∫øt n·ªëi chat cho " + username + "...");
        connected = false; // ƒê·∫∑t c·ªù n√†y tr∆∞·ªõc ƒë·ªÉ tr√°nh c√°c cu·ªôc g·ªçi ƒë·ªá quy

        try {
            if (out != null) {
                out.println("EXIT");
                out.flush(); // ƒê·∫£m b·∫£o l·ªánh EXIT ƒë∆∞·ª£c g·ª≠i
            }

            // Th√™m th·ªùi gian tr·ªÖ nh·ªè ƒë·ªÉ ƒë·∫£m b·∫£o l·ªánh EXIT ƒë∆∞·ª£c x·ª≠ l√Ω
            try { Thread.sleep(200); } catch (InterruptedException e) {}

            if (in != null) in.close();
            if (out != null) out.close();
            if (socket != null && !socket.isClosed()) socket.close();

            System.out.println("‚úÖ ƒê√£ ƒë√≥ng k·∫øt n·ªëi chat th√†nh c√¥ng cho " + username);

            // X√≥a danh s√°ch ng∆∞·ªùi d√πng
            Platform.runLater(() -> {
                onlineUsers.clear();
                chatArea.appendText("ƒê√£ ng·∫Øt k·∫øt n·ªëi kh·ªèi chat\n");
            });
        } catch (IOException e) {
            System.out.println("‚ö†Ô∏è L·ªói khi ƒë√≥ng k·∫øt n·ªëi: " + e.getMessage());
            e.printStackTrace();
        }
    }
    public boolean isConnected() {
        return connected;
    }
}